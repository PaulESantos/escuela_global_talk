{
  "hash": "f64e3b8db38f820a32e60bec626fccfb",
  "result": {
    "markdown": "---\nformat: \n  revealjs:\n    hash-type: number\n    transition: fade\n    auto-stretch: false\n    height: 900\n    width: 1600\n    logo: logo_pesa.svg\n    footer: Slides by Paul E. Santos Andrade - [@PaulESantos](https://twitter.com/PaulEfrenSantos), made with [Quarto](https://quarto.org/docs/presentations/revealjs/index.html). \n    slide-number: c/t\n    theme: [styles.scss]\nexecute: \n  freeze: true\n---\n\n\n#  {visibility=\"hidden\"}\n\n\n\n\n\n\n##  {#TitleSlide data-menu-title=\"TitleSlide\" background-color=\"#EDE8EA\" background-image=\"images/joel-peel-vlBCGvydRrs-unsplash.jpg\" background-position=\"left\" background-size=\"contain\"}\n\n\n::: {style=\"position: absolute; left: 480px; top: 200px; height: 525px; width: 1200px; background-color: #CECABE; padding: 20px; padding-left: 50px; box-shadow: 15px 15px 0px 0px #56BF99; border-radius: 5px;\"}\n\n[Procesamiento y Gestión de Datos con {{< fa brands r-project >}}]{style=\"font-size: 60px; font-weight: bold; line-height: 1em; margin: 0px\"} \n\n<br>\n\n[Herramientas para la investigación  ]{style=\"font-size: 50px; font-weight: bold; line-height: 1em; margin: 0px\"}\n\n<br>\n\n<div><div style=\"vertical-align: top; display: inline-block; font-size: 40px; font-weight: bold;\">Paul Efren Santos Andrade,&nbsp;</div></div>\n[2023-03-31]{style=\"font-size: 25px;font-weight: light;\"}\n:::\n\n## {{< fa brands r-project >}} <https://cran.r-project.org/>\n\n::: incremental\n\n- Lenguaje de código abierto - sistema multiplataforma.\n\n- Lenguaje de código abierto de de alto nivel. (Fácil de aprender!!!).\n\n- Ideal para gestión - análisis - visualización de datos, desarrollo web, aplicaciones web, y mucho mas.!!!\n\n- De fácil integración con programas de composición de textos como  $\\LaTeX$ y  $\\Pandoc$. Permitiendo la producción de  documentos, `.docx`, `.pdf`, `.html`, `.ppt`,integrando resultados de código y gráficas.\n\n- El desarrollo de paquetes  en {{< fa brands r-project >}} permite el acceso a nuevas técnicas.\n\n- La documentación de los diferentes paquetes y funciones de robusta.\n\n:::\n\n\n\n## Caracteristicas basicas\n\n\n> {{< fa brands r-project >}} se enfoca en proporcionar un lenguaje que es útil para el trabajo interactivo, para el desarrollar nuevas herramientas .\n\n\n::: incremental\n\n-  Se ejecuta en cualquier plataforma de computo estándar y sistema operativo.\n\n- Desarrollo permanente, como indicativo del desarrollo activo del software.\n\n- Capacidad gráfica sofisticada -  producción de gráficos con calidad de publicación. \n\n- La comunidad de usuarios de {{< fa brands r-project >}} es dinámica.\n\n:::\n\n## {{< fa brands r-project >}} Software libre\n> Una gran ventaja que R es que es gratuito en el sentido de software libre.\n> Los derechos de autor del código fuente principal de R son propiedad de la Fundación R y se publican bajo la Licencia Pública General de GNU versión 2.0.\n\n::: incremental\n\n- La libertad de usar el software con cualquier propósito.\n\n- La libertad de estudiar cómo funciona el software y adaptarlo a tus necesidades.\n\n- La libertad de distribuir copias del software a otros.\n\n- La libertad de mejorar y modificar el software, y distribuir tus versiones mejoradas a otros.\n:::\n. . .\n\n::: callout-tip\n## Estas libertades fomentan la colaboración y la innovación. \n\n:::\n\n\n\n## {background-color=\"#EDE8EA\" background-image=\"images/joel-peel-vlBCGvydRrs-unsplash.jpg\"}\n\n:::: {.columns}\n::: {.column width=\"50%\"}\n<center>\n<img src=\"images/RLogo.svg\" width=235px style=\"vertical-align: center;\"></img>\n</center><br>\n![Engine](images/r_engine.jpg){#fig-surus width=100%}\n:::\n\n::: {.column width=\"50%\"}\n<center>\n<img src=\"images/RStudio-Logo-flat.svg\" width=500px style=\"vertical-align: center; display: inline-block;\"></img>\n</center><br>\n![Dashboard](images/r_dashbord.jpg){#fig-hanno width=100%}\n:::\n:::\n\n::: aside\n[Statistical Inference via Data Science A ModernDive into R and the Tidyverse](https://moderndive.com/)\n:::\n\n## \n\n| base                                             | dplyr                          |\n|--------------------------------------------------|------------------------------- |\n| `df[order(x), , drop = FALSE]`                   | `arrange(df, x)`               |\n| `df[!duplicated(x), , drop = FALSE]`, `unique()` | `distinct(df, x)`              |\n| `df[which(x), , drop = FALSE]`, `subset()`       | `filter(df, x)`                |\n| `df$z <- df$x + df$y`, `transform()`             | `mutate(df, z = x + y)`        |\n| `df[[1]]`, `df$x`                                | `pull(df, 1)`, `pull(df, x)`   |\n| `names(df)[names(df) == \"x\"] <- \"y\"`             | `rename(df, y = x)`            |\n| `df[union(\"y\", names(df))]`                      | `relocate(df, y)`              |\n| `df[c(\"x\", \"y\")]`, `subset()`                    | `select(df, x, y)`             |\n| `df[grepl(\"^x\", names(df))]`                     | `select(df, starts_with(\"x\"))` |\n| `mean(df$x)`, `tapply()`, `aggregate()`, `by()`  | `summarise(df, mean(x))`       |\n| `df[c(1, 2, 5), , drop = FALSE]`                 | `slice(df, c(1, 2, 5))`        |\n\n##\n\n:::: {.columns}\n\n:::{.column width=\"50%\"}\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(mtcars$wt, mtcars$mpg, \n     main = \"Line chart in Base R\", \n     type = \"o\",\n     col = \"red\")\n```\n:::\n\n::: {.cell}\n::: {.cell-output-display}\n![](escuela_global_talk_files/figure-revealjs/unnamed-chunk-3-1.png){width=960}\n:::\n:::\n\n:::\n\n:::{.column width=\"50%\"}\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = mtcars,\n       aes(x = wt, y = mpg, group=1)) +\n  geom_line(colour = \"red\", size = 1.5) +\n  geom_point(colour = \"red\", size = 4, shape = 21, fill = \"white\") +\n  ggtitle(\"Line chart in ggplot2\")\n```\n:::\n\n::: {.cell}\n::: {.cell-output-display}\n![](escuela_global_talk_files/figure-revealjs/unnamed-chunk-5-1.png){width=960}\n:::\n:::\n\n:::\n\n::::\n\n\n## Tidyverse {background-color=\"#303436\" background-image=\"images/joel-peel-vlBCGvydRrs-unsplash.jpg\"}\n<center>\n<img src=\"images/tidyverse_packages_purpose.png\" style=\"height: 800px; width: 1400px\"></img>\n</center>\n\n\n\n## `readr` {background-image=\"images/hex/readr.svg\" background-size=\"8%\" background-position=\"98% 4%\"}\n\n<!--start columns-->\n:::: {.columns}\n\n::: {.column width=\"50%\"}\n> El objetivo de `readr` es proporcionar una forma rápida y amigable de leer datos rectangulares y llevarlos a R.\n:::\n\n::: {.column width=\"50%\"}\n##### Puedes importar datos con...\n\n- Archivos separados por comas (CSV) `read_csv()`\n- Archivos de texto separados por tabuladores `read_tsv()`\n- Archivos delimitados generales `read_delim()` delimitados con barra vertical \"|\".\n\n:::\n\n::::\n<!--end columns-->\n## `readxl` {background-image=\"images/hex/readxl.svg\" background-size=\"8%\" background-position=\"98% 4%\"}\n\n<!--start columns-->\n:::: {.columns}\n\n::: {.column width=\"50%\"}\n> El paquete readxl facilita la tarea de obtener datos de Excel y llevarlos a R.\n:::\n\n::: {.column width=\"50%\"}\n##### Puedes importar datos con...\n\n- Archivos *.xls* `read_xls()`\n- Archivos *.xlsx* `read_tsv()`\n- Lista de nombres de hojas de un archivo excel `excel_sheets()`.\n\n:::\n\n::::\n\n## `tibble` {background-image=\"images/hex/tibble.svg\" background-size=\"8%\" background-position=\"98% 4%\"}\n\n<!--start columns-->\n:::: {.columns}\n\n::: {.column width=\"50%\"}\n- Un `tibble` o `tbl_df`es una reimaginación moderna del `data.frame`.\n- No cambian los nombres o tipos de las variables, y no realizan una coincidencia parcial.\n- Tienen un método de impresión mejorado.\n:::\n\n::: {.column width=\"50%\"}\n\n::: panel-tabset\n## `data.frame`\n\n::: {.cell}\n\n```{.r .cell-code}\nmtcars[1:9, 1:10]\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n                   mpg cyl  disp  hp drat    wt  qsec vs am gear\nMazda RX4         21.0   6 160.0 110 3.90 2.620 16.46  0  1    4\nMazda RX4 Wag     21.0   6 160.0 110 3.90 2.875 17.02  0  1    4\nDatsun 710        22.8   4 108.0  93 3.85 2.320 18.61  1  1    4\nHornet 4 Drive    21.4   6 258.0 110 3.08 3.215 19.44  1  0    3\nHornet Sportabout 18.7   8 360.0 175 3.15 3.440 17.02  0  0    3\nValiant           18.1   6 225.0 105 2.76 3.460 20.22  1  0    3\nDuster 360        14.3   8 360.0 245 3.21 3.570 15.84  0  0    3\nMerc 240D         24.4   4 146.7  62 3.69 3.190 20.00  1  0    4\nMerc 230          22.8   4 140.8  95 3.92 3.150 22.90  1  0    4\n```\n:::\n:::\n\n\n## `tibble`\n\n::: {.cell}\n\n```{.r .cell-code}\nmtcars |> \n  tibble::as_tibble()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 32 × 11\n     mpg   cyl  disp    hp  drat    wt  qsec    vs    am  gear  carb\n   <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl>\n 1  21       6  160    110  3.9   2.62  16.5     0     1     4     4\n 2  21       6  160    110  3.9   2.88  17.0     0     1     4     4\n 3  22.8     4  108     93  3.85  2.32  18.6     1     1     4     1\n 4  21.4     6  258    110  3.08  3.22  19.4     1     0     3     1\n 5  18.7     8  360    175  3.15  3.44  17.0     0     0     3     2\n 6  18.1     6  225    105  2.76  3.46  20.2     1     0     3     1\n 7  14.3     8  360    245  3.21  3.57  15.8     0     0     3     4\n 8  24.4     4  147.    62  3.69  3.19  20       1     0     4     2\n 9  22.8     4  141.    95  3.92  3.15  22.9     1     0     4     2\n10  19.2     6  168.   123  3.92  3.44  18.3     1     0     4     4\n# ℹ 22 more rows\n```\n:::\n:::\n\n:::\n:::\n\n::::\n<!--end columns-->\n\n\n## `ggplot2` {background-image=\"images/hex/ggplot2.svg\" background-size=\"8%\" background-position=\"98% 4%\"}\n\n<!--start panels-->\n::: {.panel-tabset}\n\n### ggplot2\n\n:::: {.columns}\n\n::: {.column width=\"50%\"}\n- Es uno de los sistemas más elegantes y versátiles. \n- Implementa la gramática de los gráficos, un sistema coherente para describir y construir gráficos. \n\n> [ggplot2: elegant graphics for data analysis](https://ggplot2-book.org/)\n:::\n\n::: {.column width=\"50%\"}\n<center>\n![](images/cover_ggplot2.jpg){width=\"500\"}\n</center>\n:::\n\n::::\n\n\n\n\n\n### Codigo\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(showtext)\nlibrary(usefunc)\nlibrary(lubridate)\nlibrary(jcolors)\nlibrary(gtable)\nlibrary(grid)\nlibrary(RCurl)\nlibrary(png)\n\ntuesdata <- tidytuesdayR::tt_load('2022-03-15')\ncran <- tuesdata$cran\n\n# add fonts\nfont_add_google(name = \"Source Code Pro\", family = \"source\")\nshowtext_auto()\n\n# list tidyverse packages\ntv_pkg <- c(\"dplyr\", \"forcats\", \"ggplot2\", \"purrr\", \"readr\", \"stringr\", \"tibble\", \"tidyr\")\n\n# prep data\ncon_char_date <- function(date){\n  k <- str_split(date, pattern = \" \")[[1]]\n  if (length(k) == 5){\n    return(mdy(str_flatten(k[c(2, 3, 5)], collapse = \" \")))\n  }\n  if (length(k) == 6){\n    return(mdy(str_flatten(k[c(2, 4, 6)], collapse = \" \")))\n  }\n}\n\ncon_date <- function(date){\n  tryCatch(as.Date(date), error=function(e) con_char_date(date))\n}\n\nconvert_date <- function(date_vec){\n  unlist(lapply(date_vec, function(x) con_date(x)))\n}\n\nplot_data <- cran %>% \n  filter(package %in% tv_pkg, \n         rmd > 0) %>% \n  mutate(date = convert_date(date), \n         date = as_date(date)) \n\n# plot\np <- ggplot() +\n  geom_area(data = plot_data, \n            mapping = aes(x = date, y = rmd, group = package, fill = package)) +\n  facet_wrap(~package, nrow = 1) +\n  scale_x_date(limits = c(ymd(20140101), ymd(20211231)),\n               breaks = c(ymd(20140101), ymd(20180101)),\n               labels = c(2014, 2018)) +\n  scale_y_continuous(limits = c(0, 15), \n                     breaks = c(0, 5, 10)) +\n  coord_cartesian(expand = F) +\n  scale_fill_jcolors(palette = \"pal6\") +\n  labs(x = \"\", \n       y = \"Number of .Rmd vignettes\", \n       title = \"{tidyverse} vignettes\", \n       subtitle = str_wrap_break(\"The tidyverse is a collection of open source R packages that `share an underlying design philosophy, grammar, and data structures of tidy data`. Of the 8 core tidyverse packages {dplyr} has the highest number of vignettes.\\n\\nN. Rennie | Data: github.com/rmflight/vignette_analysis\\n\\n\", 70)) +\n  theme(legend.position = \"none\", \n        plot.background = element_rect(colour = \"#3A3B3C\", fill = \"#3A3B3C\"), \n        panel.background = element_rect(colour = \"#3A3B3C\", fill = \"#3A3B3C\"), \n        plot.title = element_text(colour = \"white\", family = \"source\", face = \"bold\", hjust = 0, size = 16), \n        plot.subtitle = element_text(colour = \"white\", family = \"source\", hjust = 0, size = 12, \n                                     margin = margin(5,5,10,5)),\n        axis.text = element_text(colour = \"white\", family = \"source\", hjust = 0, size = 12),\n        axis.title = element_text(colour = \"white\", family = \"source\", hjust = 0.5, size = 12),\n        plot.margin = unit(c(0.5, 0.5, 0.5, 0.5), \"cm\"), \n        panel.spacing = unit(1.5, \"lines\"),\n        strip.background = element_rect(colour = \"#3A3B3C\", fill = \"#3A3B3C\"),\n        strip.text = element_text(margin = margin(20,5,20,5)),\n        panel.grid.major = element_line(colour = \"#4d4e4f\"),\n        panel.grid.minor = element_line(colour = \"#4d4e4f\"))\np\n\n# add images\ndplyr <- readPNG(\"dplyr.png\")\nforcats <- readPNG(\"forcats.png\")\nggplot2 <- readPNG(\"ggplot2.png\")\npurrr <- readPNG(\"purrr.png\")\nreadr <- readPNG(\"readr.png\")\nstringr <- readPNG(\"stringr.png\")\ntibble <- readPNG(\"tibble.png\")\ntidyr <- readPNG(\"tidyr.png\")\n\n# edit facet labels\ng <- ggplot_gtable(ggplot_build(p))\nstrips <- grep(\"strip\", g$layout$name)\nnew_grobs <- list(rasterGrob(dplyr),\n                  rasterGrob(forcats), \n                  rasterGrob(ggplot2), \n                  rasterGrob(purrr), \n                  rasterGrob(readr), \n                  rasterGrob(stringr), \n                  rasterGrob(tibble), \n                  rasterGrob(tidyr))\ng$grobs[strips] <- new_grobs\ngrid.draw(g)\n```\n:::\n\n\n[By: ]{.small-text} {{< fa brands twitter >}} [@nrennie35](https://twitter.com/nrennie35){.small-text}\n\n\n\n### Resultado\n\n<center>\n![](images/tidyverse_vignettes.jpeg){width=\"1200\" fig-alt=\"@nrennie35\"}\n\n</center>\n\n[By: ]{.small-text} {{< fa brands twitter >}} [@nrennie35](https://twitter.com/nrennie35){.small-text}\n\n\n::: \n\n## dplyr {background-image=\"images/hex/dplyr.svg\" background-size=\"8%\" background-position=\"98% 4%\"}\n\n<!--start panels-->\n::: {.panel-tabset}\n\n### dplyr\n> `dplyr` - gramática de manipulación de datos, proporcionando un conjunto consistente de verbos que ayudan a resolver los desafíos más comunes de manipulación de datos:\n\n- `mutate()` agrega nuevas variables que son funciones de variables existentes.\n- `select()` selecciona variables en función de sus nombres.\n- `filter()` selecciona casos en función de sus valores.\n- `summarise()` reduce varios valores a un único resumen.\n- `arrange()` cambia el orden de las filas.\n\n\n### select\n:::: {.columns width=50%}\n\n::: {.column}\n- Selecciona (y opcionalmente renombra) variables en un marco de datos, utilizando un mini-lenguaje conciso que hace fácil referirse a las variables según su nombre. Por ejemplo:\n- Por nombre, a:f selecciona todas las columnas desde \"a\" a la izquierda hasta \"f\" a la derecha.\n- Por tipo, `where(is.numeric)` selecciona todas las columnas numéricas.\n:::\n\n::: {.column width=50%}\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"2-4\"}\npenguins |> \n  select(species,\n         sex,\n         body_mass_g)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 344 × 3\n   species sex    body_mass_g\n   <fct>   <fct>        <int>\n 1 Adelie  male          3750\n 2 Adelie  female        3800\n 3 Adelie  female        3250\n 4 Adelie  <NA>            NA\n 5 Adelie  female        3450\n 6 Adelie  male          3650\n 7 Adelie  female        3625\n 8 Adelie  male          4675\n 9 Adelie  <NA>          3475\n10 Adelie  <NA>          4250\n# ℹ 334 more rows\n```\n:::\n:::\n\n:::\n::::\n<!--end columns-->\n\n### arrange\n\n\n:::: {.columns}\n\n::: {.column width=50%}\n\n- `arrange()` es una función de dplyr que permite ordenar las filas de un data.frame según los valores de una o varias columnas seleccionadas.\n\n- `desc()` transforma un vector en un formato que será ordenado en orden descendente.\n\n:::\n\n::: {.column width=50%}\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"3\"}\npenguins |>\n  select(species, sex, body_mass_g) |>\n  arrange(desc(body_mass_g))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 344 × 3\n   species sex   body_mass_g\n   <fct>   <fct>       <int>\n 1 Gentoo  male         6300\n 2 Gentoo  male         6050\n 3 Gentoo  male         6000\n 4 Gentoo  male         6000\n 5 Gentoo  male         5950\n 6 Gentoo  male         5950\n 7 Gentoo  male         5850\n 8 Gentoo  male         5850\n 9 Gentoo  male         5850\n10 Gentoo  male         5800\n# ℹ 334 more rows\n```\n:::\n:::\n\n\n:::\n\n::::\n<!--end columns-->\n\n### group_by & sumamrise\n\n:::: {.columns}\n\n::: {.column width=50%}\n\n- `group_by()` se utiliza para dividir los datos en grupos basados en variables específicas.\n- `summarise()` se utiliza para resumir los datos dentro de cada uno de estos grupos.\n:::\n\n::: {.column width=50%}\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"3-4\"}\npenguins |>\n  select(species, sex, body_mass_g) |>\n  group_by(species, sex) |>         \n  summarize(mean = mean(body_mass_g))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 8 × 3\n# Groups:   species [3]\n  species   sex     mean\n  <fct>     <fct>  <dbl>\n1 Adelie    female 3369.\n2 Adelie    male   4043.\n3 Adelie    <NA>     NA \n4 Chinstrap female 3527.\n5 Chinstrap male   3939.\n6 Gentoo    female 4680.\n7 Gentoo    male   5485.\n8 Gentoo    <NA>     NA \n```\n:::\n:::\n\n\n:::\n\n::::\n<!--end columns-->\n\n### mutate\n\n:::: {.columns}\n\n::: {.column width=50%}\n- `mutate()` crea nuevas columnas que son funciones de variables existentes. \n- También puede modificar (si el nombre es el mismo que el de una columna existente) y eliminar columnas (estableciendo su valor en NULL).\n\n:::\n\n::: {.column width=50%}\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"5\"}\npenguins |>\n  count(species, sex) |>\n  add_count(species, wt = n, \n            name = \"n_species\") |>\n  mutate(prop = n/n_species*100)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 8 × 5\n  species   sex        n n_species  prop\n  <fct>     <fct>  <int>     <int> <dbl>\n1 Adelie    female    73       152 48.0 \n2 Adelie    male      73       152 48.0 \n3 Adelie    <NA>       6       152  3.95\n4 Chinstrap female    34        68 50   \n5 Chinstrap male      34        68 50   \n6 Gentoo    female    58       124 46.8 \n7 Gentoo    male      61       124 49.2 \n8 Gentoo    <NA>       5       124  4.03\n```\n:::\n:::\n\n\n:::\n\n::::\n<!--end columns-->\n\n### filter\n\n:::: {.columns}\n\n::: {.column width=50%}\n- `filter()` se utiliza para filtrar un data.frame, manteniendo todas las filas que satisfacen condiciones especificas. \n- Es importante tener en cuenta que cuando una condición se evalúa como NA, la fila se eliminará.\n\n:::\n\n::: {.column width=50%}\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"6\"}\npenguins |>\n  count(species, sex) |>\n  add_count(species, wt = n, \n            name = \"n_species\") |>\n  mutate(prop = n/n_species*100) |>\n  filter(species == \"Chinstrap\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 2 × 5\n  species   sex        n n_species  prop\n  <fct>     <fct>  <int>     <int> <dbl>\n1 Chinstrap female    34        68    50\n2 Chinstrap male      34        68    50\n```\n:::\n:::\n\n\n:::\n\n::::\n<!--end columns-->\n\n:::\n<!--end panels-->\n\n\n## stringr {background-image=\"images/hex/stringr.svg\" background-size=\"8%\" background-position=\"98% 4%\"}\n\n<!--start panels-->\n::: {.panel-tabset}\n\n### stringr\n\n:::: {.columns}\n\n::: {.column width=50%}\n\n- `stringr` proporciona un conjunto coherente de funciones diseñadas para hacer que trabajar con cadenas de texto sea lo más fácil posible.\n\n- El paquete incluye muchas funciones para ayudarnos con las **expresiones regulares**, las cuales son un lenguaje conciso para describir patrones en las cadenas de caracteres.\n\n- [`RegExplain`](https://www.garrickadenbuie.com/project/regexplain/)\n\n:::\n\n::: {.column width=50%}\n \n+ **Estas funciones nos ayudan a:**\n\n- Detectar coincidencias `str_detect()`.\n- Sub conjuntos de las cadenas de texto `str_sub()`.\n- Manejar longitudes de cadenas de texto `str_length()`.\n- Modificar las cadenas de texto `str_to_upper()` - `str_to_lower()` -`str_to_sentence()`\n- Unir y dividir cadenas de texto `str_c()` - `str_split()`\n\n:::\n\n::::\n\n### Modificación\n\n:::: {.columns}\n\n::: {.column width=50%}\n- Mayusculas\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"3\"}\npenguins |>\n  select(species, island) |>\n  mutate(ISLAND = str_to_upper(island))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 344 × 3\n   species island    ISLAND   \n   <fct>   <fct>     <chr>    \n 1 Adelie  Torgersen TORGERSEN\n 2 Adelie  Torgersen TORGERSEN\n 3 Adelie  Torgersen TORGERSEN\n 4 Adelie  Torgersen TORGERSEN\n 5 Adelie  Torgersen TORGERSEN\n 6 Adelie  Torgersen TORGERSEN\n 7 Adelie  Torgersen TORGERSEN\n 8 Adelie  Torgersen TORGERSEN\n 9 Adelie  Torgersen TORGERSEN\n10 Adelie  Torgersen TORGERSEN\n# ℹ 334 more rows\n```\n:::\n:::\n\n:::\n\n\n::: {.column width=50%}\n- Minusculas.\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"3\"}\npenguins |>\n  select(species, island) |>\n  mutate(ISLAND = str_to_lower(island))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 344 × 3\n   species island    ISLAND   \n   <fct>   <fct>     <chr>    \n 1 Adelie  Torgersen torgersen\n 2 Adelie  Torgersen torgersen\n 3 Adelie  Torgersen torgersen\n 4 Adelie  Torgersen torgersen\n 5 Adelie  Torgersen torgersen\n 6 Adelie  Torgersen torgersen\n 7 Adelie  Torgersen torgersen\n 8 Adelie  Torgersen torgersen\n 9 Adelie  Torgersen torgersen\n10 Adelie  Torgersen torgersen\n# ℹ 334 more rows\n```\n:::\n:::\n\n\n:::\n::::\n\n### Coincidencia\n \n:::: {.columns}\n\n::: {.column width=50%}\n\n- `str_detect()`\n- \"Adelie\" - \"Gentoo\" - \"Chinstrap\"\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"3\"}\npenguins |>\n  select(species, island) |>\n  filter(str_detect(species, \"Gent\"))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 124 × 2\n   species island\n   <fct>   <fct> \n 1 Gentoo  Biscoe\n 2 Gentoo  Biscoe\n 3 Gentoo  Biscoe\n 4 Gentoo  Biscoe\n 5 Gentoo  Biscoe\n 6 Gentoo  Biscoe\n 7 Gentoo  Biscoe\n 8 Gentoo  Biscoe\n 9 Gentoo  Biscoe\n10 Gentoo  Biscoe\n# ℹ 114 more rows\n```\n:::\n:::\n\n:::\n\n::: {.column width=50%}\n- [Expresiones reculares](https://rstudio-pubs-static.s3.amazonaws.com/74603_76cd14d5983f47408fdf0b323550b846.html)\n\n- 'Torgersen\" - \"Biscoe\" - \"Dream\" \n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"3\"}\npenguins |>\n  select(species, island) |>\n  filter(str_detect(island, \"^T\"))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 52 × 2\n   species island   \n   <fct>   <fct>    \n 1 Adelie  Torgersen\n 2 Adelie  Torgersen\n 3 Adelie  Torgersen\n 4 Adelie  Torgersen\n 5 Adelie  Torgersen\n 6 Adelie  Torgersen\n 7 Adelie  Torgersen\n 8 Adelie  Torgersen\n 9 Adelie  Torgersen\n10 Adelie  Torgersen\n# ℹ 42 more rows\n```\n:::\n:::\n\n\n:::\n::::\n\n\n:::\n<!--end panels-->\n\n\n\n## tidyr {background-image=\"images/hex/tidyr.svg\" background-size=\"8%\" background-position=\"98% 4%\"}\n\n<!--start panels-->\n::: {.panel-tabset}\n\n### tidyr\n> Hay tres reglas interrelacionadas que hacen que un conjunto de datos se considere en [formato tidy](https://r4ds.had.co.nz/tidy-data.html) :\n\n - Cada variable debe tener su propia columna.\n - Cada observación debe tener su propia fila.\n - Cada valor debe tener su propia celda.\n <center>\n![](https://d33wubrfki0l68.cloudfront.net/6f1ddb544fc5c69a2478e444ab8112fb0eea23f8/91adc/images/tidy-1.png){width=1200px fig-alt=\"schematic representing the 3 earlier points\"}\n</center>\n\n\n### Un-tidying \n\n- `pivot_wider()`\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"2-3\"}\npenguins |>\n  pivot_wider(names_from = sex,\n              values_from = body_mass_g)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 344 × 9\n   species island    bill_length_mm bill_depth_mm flipper_length_mm  year  male\n   <fct>   <fct>              <dbl>         <dbl>             <int> <int> <int>\n 1 Adelie  Torgersen           39.1          18.7               181  2007  3750\n 2 Adelie  Torgersen           39.5          17.4               186  2007    NA\n 3 Adelie  Torgersen           40.3          18                 195  2007    NA\n 4 Adelie  Torgersen           NA            NA                  NA  2007    NA\n 5 Adelie  Torgersen           36.7          19.3               193  2007    NA\n 6 Adelie  Torgersen           39.3          20.6               190  2007  3650\n 7 Adelie  Torgersen           38.9          17.8               181  2007    NA\n 8 Adelie  Torgersen           39.2          19.6               195  2007  4675\n 9 Adelie  Torgersen           34.1          18.1               193  2007    NA\n10 Adelie  Torgersen           42            20.2               190  2007    NA\n# ℹ 334 more rows\n# ℹ 2 more variables: female <int>, `NA` <int>\n```\n:::\n:::\n\n\n### Re-tidying\n\n- `pivot_longer()`\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"2,3,4\"}\nuntidy_penguins |>\n  pivot_longer(cols = male:`NA`,           \n               names_to = \"sex\",           \n               values_to = \"body_mass_g\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 1,032 × 8\n   species island    bill_length_mm bill_depth_mm flipper_length_mm  year sex   \n   <fct>   <fct>              <dbl>         <dbl>             <int> <int> <chr> \n 1 Adelie  Torgersen           39.1          18.7               181  2007 male  \n 2 Adelie  Torgersen           39.1          18.7               181  2007 female\n 3 Adelie  Torgersen           39.1          18.7               181  2007 NA    \n 4 Adelie  Torgersen           39.5          17.4               186  2007 male  \n 5 Adelie  Torgersen           39.5          17.4               186  2007 female\n 6 Adelie  Torgersen           39.5          17.4               186  2007 NA    \n 7 Adelie  Torgersen           40.3          18                 195  2007 male  \n 8 Adelie  Torgersen           40.3          18                 195  2007 female\n 9 Adelie  Torgersen           40.3          18                 195  2007 NA    \n10 Adelie  Torgersen           NA            NA                  NA  2007 male  \n# ℹ 1,022 more rows\n# ℹ 1 more variable: body_mass_g <int>\n```\n:::\n:::\n\n\n:::\n<!--end panels-->\n\n## {background-color=\"#303436\" background-image=\"images/leone-venter-pVt9j3iWtPM-unsplash.jpg\"}\n\n:::aside\nPhoto by <a href=\"https://unsplash.com/@fempreneurstyledstock?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText\">Leone Venter</a> on <a href=\"https://unsplash.com/photos/pVt9j3iWtPM?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText\">Unsplash</a>\n:::\n\n## Herramientas \n\n::: {.panel-tabset}\n\n#### CRAN Task Views\n<center>\n![](images/ctv.png){width=1200px fig-alt=\"schematic representing the 3 earlier points\"}\n</center>\n\n#### R-universe\n\n:::: {.columns}\n\n::: {.column width=50%}\n\n![](images/r_universe.png){width=1200px}\n:::\n\n::: {.column width=50%}\n\n![](images/r_universe_ecology.png){width=1200px}\n\n:::\n::::\n::: aside\n\n[https://r-universe.dev/search/](https://r-universe.dev/search/){.small-text}\n[https://cran.r-project.org/web/views/](https://cran.r-project.org/web/views/){.small-text}\n:::\n:::\n\n## Herramientas \n\n\n<center>\n![](images/git_github.svg){width=1200px}\n</center>\n## Herramientas \n\n<center>\n\n![](images/git_github_rstudio.svg){width=1200px}\n</center>\n\n## [Reproducibilidad y transparencia !! ]{style=\"color: transparent\"} {background-color=\"#F9F9F7\" background-image=\"images/pawel-czerwinski-lWBZ01XRRoI-unsplash.jpg\"  background-size=\"contain\"}\n\n:::: {.columns}\n\n::: {.column width=70%}\n\n<center>\n### [Reproducibilidad  y transparencia.]{style=\"color: #00cc00\"}\n</center>\n\n:::\n::: {.column width=30%}\n:::\n::::\n::: aside\nPhoto by <a href=\"https://unsplash.com/@pawel_czerwinski?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText\">Pawel Czerwinski</a> on <a href=\"https://unsplash.com/photos/lWBZ01XRRoI?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText\">Unsplash</a>\n:::\n\n## Reproducibilidad y transparencia !! \n\n<center>\n![](images/irreproducibility_1.png){width=1200px}\n</center>\n\n::: aside\n[The Economics of Reproducibility in Preclinical Research](https://pubmed.ncbi.nlm.nih.gov/26057340/)\n:::\n\n## Reproducibilidad y transparencia !! \n\n<center>\n![](images/irreproducibility_2.png){width=1200px}\n</center>\n\n::: aside\n[The Economics of Reproducibility in Preclinical Research](https://pubmed.ncbi.nlm.nih.gov/26057340/)\n:::\n\n\n## Reproducibilidad y transparencia !! { background-color=\"#EDE8EA\" background-image=\"images/joel-peel-vlBCGvydRrs-unsplash.jpg\" background-position=\"left\" background-size=\"contain\"}\n\n::: {style=\"position: absolute; left: 480px; top: 150px; height: 570px; width: 1200px; background-color: #CECABE; padding: 20px; padding-left: 50px; box-shadow: 15px 15px 0px 0px #56BF99; border-radius: 5px;\"}\n\n- [F (Findable): los datos deben ser fácilmente identificables y localizables, con metadatos claros y bien definidos que permitan su búsqueda y recuperación.]{style=\"font-size: 30px; font-weight: bold; line-height: 1em; margin: 0px\"} \n\n- [A (Accessible): los datos deben estar disponibles para su acceso y descarga, preferiblemente a través de una plataforma en línea.]{style=\"font-size: 30px; font-weight: bold; line-height: 1em; margin: 0px\"} \n\n- [I (Interoperable): los datos deben poder ser utilizados en diferentes contextos y por diferentes sistemas, con formatos estandarizados y estructuras bien definidas.]{style=\"font-size: 30px; font-weight: bold; line-height: 1em; margin: 0px\"} \n- [R (Reusable): los datos deben ser utilizables para diferentes propósitos, con licencias claras y permisos de uso explícitos.]{style=\"font-size: 30px; font-weight: bold; line-height: 1em; margin: 0px\"} \n\n:::\n\n\n<!-- agradecimeintos-->\n\n## {background-color=\"#303436\" background-image=\"images/joel-peel-vlBCGvydRrs-unsplash.jpg\"}\n\n::: columns\n::: {.column}\n\n<br>\n\n\n::: aside\nPhoto by <a href=\"https://unsplash.com/@joel_m_peel?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText\">Joel Peel</a> on <a href=\"https://unsplash.com/photos/vlBCGvydRrs?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText\">Unsplash</a>\n\n:::\n\n:::\n\n::: {.column}\n\n<center>\n\n<img style=\"border-radius: 50%;\" src=\"images/DSC_0140.JPG\" width=\"550px\"/>\n\n\n{{< fa brands twitter >}} [@PaulEfrenSantos](https://twitter.com/PaulEfrenSantos)\n\n{{< fa brands github >}} [PaulESantos](https://github.com/PaulESantos)\n\n{{< fa globe >}} [paulefrensa.rbind.io](https://paulefrensa.rbind.io/)\n\n</center>\n:::\n\n:::\n\n\n<!-- fuentes-->\n\n## {background-color=\"#999900\" background-image=\"images/joel-peel-vlBCGvydRrs-unsplash.jpg\"}\n\n::: columns\n::: {.column}\n\n### Articulos:\n\n- [Open science, reproducibility, and transparency in ecology](https://esajournals.onlinelibrary.wiley.com/doi/epdf/10.1002/eap.1822)\n\n- [A Beginner’s Guide to Conducting Reproducible Research](https://esajournals.onlinelibrary.wiley.com/doi/epdf/10.1002/bes2.1801)\n\n- [The FAIR Guiding Principles for scientific data management and stewardship](https://www.nature.com/articles/sdata201618)\n\n- [Data Organization in Spreadsheets](https://www.tandfonline.com/doi/pdf/10.1080/00031305.2017.1375989)\n\n- [Tidy Data](https://vita.had.co.nz/papers/tidy-data.pdf)\n\n### Video:\n- [Keynote EARL London 2018 - Garrett Grolemund, RStudio](https://www.youtube.com/watch?v=HVlwNayog-k&t=1273s)\n\n:::\n\n::: {.column}\n### Libro:\n<center>\n<img src=\"images/r4ds-cover.png\" width=\"450px\"/>\n</center>\n\n[Ingles](https://r4ds.hadley.nz/) / [Español](https://es.r4ds.hadley.nz/) \n:::\n\n:::\n",
    "supporting": [
      "escuela_global_talk_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\r\n<script>\r\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\r\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\r\n  // slide changes (different for each slide format).\r\n  (function () {\r\n    // dispatch for htmlwidgets\r\n    function fireSlideEnter() {\r\n      const event = window.document.createEvent(\"Event\");\r\n      event.initEvent(\"slideenter\", true, true);\r\n      window.document.dispatchEvent(event);\r\n    }\r\n\r\n    function fireSlideChanged(previousSlide, currentSlide) {\r\n      fireSlideEnter();\r\n\r\n      // dispatch for shiny\r\n      if (window.jQuery) {\r\n        if (previousSlide) {\r\n          window.jQuery(previousSlide).trigger(\"hidden\");\r\n        }\r\n        if (currentSlide) {\r\n          window.jQuery(currentSlide).trigger(\"shown\");\r\n        }\r\n      }\r\n    }\r\n\r\n    // hookup for slidy\r\n    if (window.w3c_slidy) {\r\n      window.w3c_slidy.add_observer(function (slide_num) {\r\n        // slide_num starts at position 1\r\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\r\n      });\r\n    }\r\n\r\n  })();\r\n</script>\r\n\r\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}